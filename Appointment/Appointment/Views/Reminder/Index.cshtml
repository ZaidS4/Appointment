@model IEnumerable<Appointment.ViewModel.Models.RemindersViewModel>

@{
    ViewBag.Title = "All reminders";
    Layout = "~/Views/Shared/_Layout.cshtml";

}


<br />
<br />
<br />
<br />
<div class="row">
    <div class="col-md-12">
        @(Html.Kendo().Grid(Model)
              .Name("Grid")

              .Columns(columns =>
              {
                  columns.Bound(p => p.Name).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains).Delay(600000)));
                  columns.Bound(p => p.StartDate).Format("{0:dd/MM/yyyy}");
                  columns.Bound(p => p.EndDate).Format("{0:dd/MM/yyyy}");
                  columns.Bound(p => p.TypeName).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains).Delay(600000)));
                  columns.Bound(p => p.IsActive).Template(P=> P.IsActive.HasValue  ? (P.IsActive.Value ? "Active" : "Inactive") : "Inactive").ToString();


                  columns.Command(command =>
                  {
                      command.Custom("Details").Action("Details", "Reminder").HtmlAttributes(new { id = "viewItem", title = "View", style = "width:30px;", value = "View Details" });
                      command.Custom("Edit").Action("Update", "Reminder").HtmlAttributes(new { id = "editItem", title = "Edit", value = "View Details" });
                  }).Width(250);
              })
                .ToolBar(toolbar => toolbar.Custom()
                .Text("New Employee Reminder")
                .Action("NewEmployeeReminder", "Reminder"))
                .ToolBar(toolbar => toolbar.Custom()
                .Text("New General Reminder")
                .Action("NewGeneralReminder", "Reminder"))
              .Editable(editable => editable.Enabled(false).Mode(GridEditMode.InCell))
              .Pageable(pageable => pageable
                       .Refresh(true)
                       .PageSizes(true)
                       .ButtonCount(5))
              .Sortable()
              .Navigatable()
              .Scrollable()
              .Selectable(selectable => selectable.Enabled(true).Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
              .Filterable(filterable => filterable.Mode(GridFilterMode.Row))
              .Filterable(filterable => filterable.Messages(m => m.IsFalse("Inactive"))
              .Messages(m=>m.IsTrue("Acitve")))
              .HtmlAttributes(new { style = "height:400px;" })
              .DataSource (dataSource => dataSource
                  .Server()
                  .PageSize(20)
                  .Model(model => model.Id(p => p.ID))
                  .Read("Index", "Reminder")
              )
        )


    </div>

</div>

<style>
    .k-grid .k-state-selected {
        background: #1cacff;
        color: #000000;
    }
   
    .k-grid tr.k-state-selected:hover {
        background-color: #c5f1ff;
    }
</style>


<script type="text/javascript">

    $(document).ready(function () {
        $("form.k-edit-form").kendoValidator();
       

    });
</script>

